contract Game =\n  entrypoint total_supply : () => int\n\ncontract Shop =\n  record state = {\n    owner             : address,\n    gamesContracts    : map(int, Game),\n    totalGames        : int,\n    games             : map(address, map(int, Game)),\n    total_games_user  : map(address, int)}\n  \n  stateful entrypoint init() = {\n    owner = Call.caller,\n    gamesContracts = {},\n    totalGames = 0,\n    games = {},\n    total_games_user = {}}\n\n  stateful entrypoint addGame(g : Game) =\n    only_owner()\n    put(state{gamesContracts[state.totalGames] = g, totalGames = add(state.totalGames, 1)})\n\n  entrypoint getGames() : map(int, Game) = state.gamesContracts\n\n  stateful entrypoint addGameToUser(user : address, game : Game) = \n    only_owner()\n    put(state{games[user][state.total_games_user[user]] = game,total_games_user[user] = add(state.total_games_user[user], 1)})\n\n  private function only_owner() =\n    require\'(Call.caller == state.owner, "Only owner can mint!")\n\n  private function require\'(b : bool, err : string) =\n    if(!b)\n      abort(err)\n\n  private function add(a : int, b : int) : int =\n    let c : int = a + b\n    require(c >= a, "Error")\n    c\n
